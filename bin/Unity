#!/bin/bash -e

unity_params=()
project_path=.
log_file=
while [ "$#" -gt 0 ]; do
  case "${1}" in
    "-projectPath")
      unity_params+=("-projectPath")
      shift
      if [[ ! ${1} =~ ^- ]]; then
        project_path="$1"
        unity_params+=("${project_path}")
      fi
      ;;
    "-logFile")
      unity_params+=("-logFile")
      shift
      if [[ ! ${1} =~ ^- ]]; then
        log_file="${1}"
        unity_params+=("${log_file}")
      fi
      ;;
    *)
      unity_params+=("${1}")
      ;;
  esac
  if [ "$#" -gt 0 ]; then
    shift
  fi
done

unity_install_dir=
unity_bin_path=
if [ "$(uname)" == 'Darwin' ]; then
  unity_install_dir="/Applications/Unity/Hub/Editor"
  unity_bin_path="Unity.app/Contents/MacOS/Unity"
elif [ "$(expr substr $(uname -s) 1 10)" == 'MINGW32_NT' -o "$(expr substr $(uname -s) 1 10)" == 'MINGW64_NT' ]; then
  unity_install_dir="/c/Program Files/Unity/Hub/Editor"
  unity_bin_path="Editor/Unity.exe"
else
  echo "Your platform ($(uname -a)) is not supported." 1>&2
  exit 1
fi

if [ -n "${UNITY_INSTALL_DIR}" ]; then
  unity_install_dir=${UNITY_INSTALL_DIR}
fi

version_file="${project_path%/}/ProjectSettings/ProjectVersion.txt"
unity_version=
if [ -e "${version_file}" ]; then
  unity_version=$(yq r "${version_file}" m_EditorVersion)
else
  unity_version=$(ls "${unity_install_dir}" | sort -n -t "." -k 1 -k 2 -k 3 -k 4 | tail -n 1)
fi

unity="${unity_install_dir%/}/${unity_version}/${unity_bin_path}"

"${unity}" "${unity_params[@]}"
