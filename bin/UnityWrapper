#!/bin/bash -e

# https://stackoverflow.com/questions/5014632/how-can-i-parse-a-yaml-file-from-a-linux-shell-script
function parse_yaml() {
  local prefix=$2
  local s='[[:space:]]*' w='[a-zA-Z0-9_]*' fs=$(echo @ | tr @ '\034')
  sed -ne "s|^\($s\):|\1|" \
    -e "s|^\($s\)\($w\)$s:$s[\"']\(.*\)[\"']$s\$|\1$fs\2$fs\3|p" \
    -e "s|^\($s\)\($w\)$s:$s\(.*\)$s\$|\1$fs\2$fs\3|p" $1 \
    | awk -F$fs '{
      indent = length($1)/2;
      vname[indent] = $2;
      for (i in vname) {if (i > indent) {delete vname[i]}}
      if (length($3) > 0) {
         vn=""; for (i=0; i<indent; i++) {vn=(vn)(vname[i])("_")}
         printf("%s%s%s=\"%s\"\n", "'$prefix'",vn, $2, $3);
      }
   }'
}

platform=
if [ "$(uname)" == 'Darwin' ]; then
  platform="osx"
elif [ "$(expr substr $(uname -s) 1 5)" == 'MINGW' -o "$(expr substr $(uname -s) 1 7)" == 'MSYS_NT' ]; then
  platform="win"
else
  echo "Your platform ($(uname -a)) is not supported." 1>&2
  exit 1
fi

unity_install_dir=
unity_bin_path=
case "${platform}" in
  "osx")
    unity_install_dir="/Applications/Unity/Hub/Editor"
    unity_bin_path="Unity.app/Contents/MacOS/Unity"
    ;;
  "win")
    unity_install_dir="/c/Program Files/Unity/Hub/Editor"
    unity_bin_path="Editor/Unity.exe"
    ;;
esac
if [ -n "${UNITY_INSTALL_DIR}" ]; then
  unity_install_dir=${UNITY_INSTALL_DIR}
fi

unity_params=()
project_path=
log_file=
log_stdout=0
while [ "$#" -gt 0 ]; do
  case "${1}" in
    "-projectPath")
      unity_params+=("-projectPath")
      if [ "$#" -gt 1 -a "${2:0:1}" != "-" ]; then
        project_path="$2"
        unity_params+=("${project_path}")
        shift
      fi
      ;;
    "-logFile")
      unity_params+=("-logFile")
      if [ "$#" -gt 1 -a "${2:0:1}" != "-" ]; then
        log_file="${2}"
        unity_params+=("${log_file}")
        shift
      elif [ "${platform}" = "win" ]; then
        # windowsは標準出力できないので一時ファイルにログを書き込む
        log_file=$(mktemp)
        unity_params+=("${log_file}")
        log_stdout=1
      fi
      ;;
    *)
      unity_params+=("${1}")
      ;;
  esac
  if [ "$#" -gt 0 ]; then
    shift
  fi
done

if [ -n "${project_path}" ]; then
  version_file="${project_path%/}/ProjectSettings/ProjectVersion.txt"
fi
if [ -e "${version_file}" ]; then
  eval $(parse_yaml "${version_file}")
  unity_version=${m_EditorVersion}
else
  unity_version=$(ls "${unity_install_dir}" | sort -n -t "." -k 1 -k 2 -k 3 -k 4 | tail -n 1)
fi

unity="${unity_install_dir%/}/${unity_version}/${unity_bin_path}"
if [ ! -e "${unity}" ]; then
  echo "no install unity version=${unity_version}" 1>&2
  exit 1
fi

if [ ${log_stdout} -eq 1 -a -n "${log_file}" ]; then
  (
    # unityのログ書き込みより前にtailすると環境によってエラーになるので書き込みを待つ
    while [ ! -s "${log_file}" ]; do
      if ! ps -p $$ >/dev/null 2>&1; then
        break
      fi
      sleep 0.5
    done
    tail --pid $$ --sleep-interval=0.5 -n +0 -f "${log_file}"
  ) &
  trap "sleep 1; rm -f '${log_file}' >/dev/null 2>&1 | cat" EXIT
fi

"${unity}" "${unity_params[@]}"
